<tool id="bgl_to_ped" name="BGL to PED output" version="1.0.0">
    <description> Turns Beagle back into ped  </description>

    <command>
        
        awk '{ print $1,$2,$3,$4,$5,$6; }' ${os.path.join($lped_input.extra_files_path, $lped_input.metadata.base_name +".ped")} > out.fam;
        ${__root_dir__}/tool-data/shared/beagle/./bgl_to_ped $bgl_input out.fam $phased_type > ${lped_input.metadata.base_name}.ped 2> /dev/null;
        cp ${os.path.join($lped_input.extra_files_path, $lped_input.metadata.base_name + ".map")} .;
        python ${__root_dir__}/tool-data/shared/composite_datatypes/create_composite_rgenetics.py 'lped' $phased_lped $phased_lped.metadata.base_name $phased_lped.extra_files_path
    </command>

    <inputs>
        <param name="bgl_input" type="data" format="bgl" label="Phased Beagle Output"/>
        <param name="lped_input" type="data" format="lped" label="Original Lped Input"/>
        <param name="phased_type" type="integer" value="0" label="Phased Data Type (0/2/3 for unrelated/pairs/trios)" />
    </inputs>

    <outputs>

        <data name="phased_lped" format="lped" metadata_source="lped_input"/> 

    </outputs>

    <help>
        Given the nature of the formats the script required the original 
        lped/pbed is supplied also so that it can be converted back into a phased ped/map
        This is because some information is removed in the conversion to beagle
        and to translate that back into lped data the original files are required.
    </help>

</tool>
